<Window x:Class="QuantTrader.LoginWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:QuantTrader"
        xmlns:vm="clr-namespace:QuantTrader.ViewModels"
        xmlns:cvt="clr-namespace:QuantTrader.Converts"
        mc:Ignorable="d"
        Title="QuantTrader - Login" Height="500" Width="450"
        WindowStartupLocation="CenterScreen"
        ResizeMode="NoResize"
        d:DataContext="{d:DesignInstance vm:LoginViewModel}">

    <Window.Resources>
        <Style TargetType="TextBlock">
            <Setter Property="Margin" Value="5"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>
        <Style TargetType="TextBox">
            <Setter Property="Margin" Value="5"/>
            <Setter Property="Padding" Value="8"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="Height" Value="32"/>
        </Style>
        <Style TargetType="PasswordBox">
            <Setter Property="Margin" Value="5"/>
            <Setter Property="Padding" Value="8"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="Height" Value="32"/>
        </Style>
        <Style TargetType="ComboBox">
            <Setter Property="Margin" Value="5"/>
            <Setter Property="Padding" Value="8"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="Height" Value="32"/>
        </Style>
        <Style TargetType="Button">
            <Setter Property="Margin" Value="5"/>
            <Setter Property="Padding" Value="15,8"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="Height" Value="36"/>
            <Setter Property="MinWidth" Value="100"/>
        </Style>
        <Style TargetType="CheckBox">
            <Setter Property="Margin" Value="5"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>

        <!-- 自定义样式 -->
        <Style x:Key="TitleStyle" TargetType="TextBlock">
            <Setter Property="FontSize" Value="24"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="Margin" Value="0,20,0,30"/>
            <Setter Property="Foreground" Value="#2C3E50"/>
        </Style>

        <Style x:Key="StatusStyle" TargetType="TextBlock">
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="Foreground" Value="#E74C3C"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="TextWrapping" Value="Wrap"/>
        </Style>

        <Style x:Key="LoginButtonStyle" TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
            <Setter Property="Background" Value="#3498DB"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderBrush" Value="#2980B9"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#2980B9"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" Value="#BDC3C7"/>
                    <Setter Property="BorderBrush" Value="#95A5A6"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="CancelButtonStyle" TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
            <Setter Property="Background" Value="#95A5A6"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderBrush" Value="#7F8C8D"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#7F8C8D"/>
                </Trigger>
            </Style.Triggers>
        </Style> 

        <cvt:BoolToVisibilityConverter x:Key="BrokerDescriptionConverter"/>
        <cvt:StringToVisibilityConverter x:Key="StringToVisibilityConverter"/>
        <cvt:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
    </Window.Resources>

    <Grid Background="#ECF0F1">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <!-- 标题 -->
        <TextBlock Grid.Row="0" Text="Quant Trader" Style="{StaticResource TitleStyle}"/>

        <!-- 登录表单 -->
        <Border Grid.Row="1" Background="White" CornerRadius="8" Margin="30,0,30,20"
                BorderBrush="#BDC3C7" BorderThickness="1">
            <StackPanel Margin="30,20">
                <!-- 券商类型选择 -->
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="120"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Grid.Column="0" Text="Broker:" FontWeight="Bold"/>
                    <ComboBox Grid.Column="1" 
                              ItemsSource="{Binding AvailableBrokers}"
                              SelectedValue="{Binding SelectedBrokerType}"
                              SelectedValuePath="Type"
                              DisplayMemberPath="Name"/>
                </Grid>

                <!-- 券商描述 -->
                <TextBlock Text="{Binding SelectedBrokerType, Converter={StaticResource BrokerDescriptionConverter}}"
                           FontStyle="Italic" FontSize="11" Foreground="#7F8C8D" Margin="125,-5,5,10"/>

                <!-- 服务器地址 -->
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="120"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Grid.Column="0" Text="Server:" FontWeight="Bold"/>
                    <TextBox Grid.Column="1" Text="{Binding ServerAddress}"/>
                </Grid>

                <!-- 用户名 -->
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="120"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Grid.Column="0" Text="Username:" FontWeight="Bold"/>
                    <TextBox Grid.Column="1" Text="{Binding Username}"/>
                </Grid>

                <!-- 密码 -->
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="120"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Grid.Column="0" Text="Password:" FontWeight="Bold"/>
                    <PasswordBox Grid.Column="1" x:Name="PasswordBox" 
                                 PasswordChanged="PasswordBox_PasswordChanged"/>
                </Grid>

                <!-- 记住密码 -->
                <CheckBox Content="Remember credentials" 
                          IsChecked="{Binding RememberCredentials}"
                          Margin="125,10,5,10"/>

                <!-- 状态消息 -->
                <TextBlock Text="{Binding StatusMessage}" 
                           Style="{StaticResource StatusStyle}"
                           Visibility="{Binding StatusMessage, Converter={StaticResource StringToVisibilityConverter}}"/>

                <!-- 按钮 -->
                <Grid Margin="0,20,0,0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>

                    <Button Grid.Column="0" 
                            Command="{Binding LoginCommand}"
                            Style="{StaticResource LoginButtonStyle}"
                            IsDefault="True">
                        <Button.Content>
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                <TextBlock Text="Login" Visibility="{Binding IsLogging, Converter={StaticResource BoolToVisibilityConverter}, ConverterParameter=Inverse}"/>
                                <StackPanel Orientation="Horizontal" Visibility="{Binding IsLogging, Converter={StaticResource BoolToVisibilityConverter}}">
                                    <TextBlock Text="Connecting" VerticalAlignment="Center"/>
                                    <TextBlock Text="..." VerticalAlignment="Center" Margin="5,0,0,0">
                                        <TextBlock.RenderTransform>
                                            <RotateTransform x:Name="LoadingRotation" CenterX="10" CenterY="10"/>
                                        </TextBlock.RenderTransform>
                                        <TextBlock.Style>
                                            <Style TargetType="TextBlock">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding IsLogging}" Value="True">
                                                        <DataTrigger.EnterActions>
                                                            <BeginStoryboard>
                                                                <Storyboard>
                                                                    <DoubleAnimation Storyboard.TargetProperty="(RenderTransform).(RotateTransform.Angle)"
                                                                                   From="0" To="360" Duration="0:0:1" RepeatBehavior="Forever"/>
                                                                </Storyboard>
                                                            </BeginStoryboard>
                                                        </DataTrigger.EnterActions>
                                                        <DataTrigger.ExitActions>
                                                            <BeginStoryboard>
                                                                <Storyboard>
                                                                    <DoubleAnimation Storyboard.TargetProperty="(RenderTransform).(RotateTransform.Angle)"
                                                                                   To="0" Duration="0:0:0.1"/>
                                                                </Storyboard>
                                                            </BeginStoryboard>
                                                        </DataTrigger.ExitActions>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBlock.Style>
                                    </TextBlock>
                                </StackPanel>
                            </StackPanel>
                        </Button.Content>
                    </Button>

                    <Button Grid.Column="1" Content="Cancel" 
                            Command="{Binding CancelCommand}"
                            Style="{StaticResource CancelButtonStyle}"
                            IsCancel="True"/>
                </Grid>
            </StackPanel>
        </Border>

        <!-- 版权信息 -->
        <TextBlock Grid.Row="2" Text="© 2024 QuantTrader. All rights reserved." 
                   HorizontalAlignment="Center" FontSize="10" 
                   Foreground="#7F8C8D" Margin="0,0,0,10"/>
    </Grid>

</Window>
